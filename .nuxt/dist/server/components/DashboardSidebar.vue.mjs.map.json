{"file":"DashboardSidebar.vue.mjs","mappings":";;;;;;;;;;;;;;;;AA8GA,UAAM,QAAQ,SAAS;AACjB,UAAA,eAAe,IAAI,IAAI;AAE7B,UAAM,YAAY;AAAA,MAChB,EAAE,IAAI,cAAc,OAAO,aAAa,MAAM,sBAAsB;AAAA,MACpE;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,UACR,EAAE,IAAI,gBAAgB,OAAO,cAAc;AAAA,UAC3C,EAAE,IAAI,sBAAsB,OAAO,oBAAoB;AAAA,QAAA;AAAA,MAE3D;AAAA,MACA,EAAE,IAAI,aAAa,OAAO,YAAY,MAAM,oBAAoB;AAAA,MAChE;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,UACR,EAAE,IAAI,4BAA4B,OAAO,0BAA0B;AAAA,UACnE,EAAE,IAAI,sBAAsB,OAAO,oBAAoB;AAAA,UACvD,EAAE,IAAI,oBAAoB,OAAO,kBAAkB;AAAA,QAAA;AAAA,MAEvD;AAAA,MACA,EAAE,IAAI,cAAc,OAAO,aAAa,MAAM,qBAAqB;AAAA,MACnE;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,UACR,EAAE,IAAI,2BAA2B,OAAO,yBAAyB;AAAA,UACjE,EAAE,IAAI,wBAAwB,OAAO,0BAA0B;AAAA,UAC/D,EAAE,IAAI,yBAAyB,OAAO,uBAAuB;AAAA,UAC7D,EAAE,IAAI,0BAA0B,OAAO,uBAAuB;AAAA,QAAA;AAAA,MAElE;AAAA,MACA,EAAE,IAAI,YAAY,OAAO,WAAW,MAAM,oBAAoB;AAAA,MAC9D,EAAE,IAAI,YAAY,OAAO,WAAW,MAAM,oBAAoB;AAAA,IAChE;AAGM,UAAA,iBAAiB,CAAC,SAAS;AAC/B,UAAI,KAAK,UAAU;AACV,eAAA,KAAK,SAAS,KAAK,CAAC,UAAU,MAAM,KAAK,WAAW,MAAM,EAAE,CAAC;AAAA,MAAA;AAEtE,aAAO,KAAK,MAAM,MAAM,KAAK,WAAW,KAAK,EAAE;AAAA,IACjD;AAEA,UAAM,WAAW,CAAC,SAAS,MAAM,SAAS;AAGpC,UAAA,cAAc,CAAC,MAAM,UAAU;AACnC,UAAI,KAAK,UAAU;AACjB,cAAM,eAAe;AACrB,qBAAa,QAAQ,aAAa,UAAU,KAAK,QAAQ,OAAO,KAAK;AAAA,MAAA,OAChE;AACL,qBAAa,QAAQ;AAAA,MAAA;AAAA,IAEzB;AAGM,UAAA,iBAAiB,CAAC,SAAS;AAC/B,aAAO,aAAa,UAAU,KAAK,SAAS,eAAe,IAAI;AAAA,IACjE;AAGA;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,MAAM;AACJ,qBAAa,QAAQ;AAAA,MAAA;AAAA,IAEzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/DashboardSidebar.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white border-r border-gray-200 flex flex-col h-screen\">\r\n    <!-- Header -->\r\n    <div class=\"p-5 border-b border-gray-100\">\r\n      <NuxtImg src=\"Logo.svg\" alt=\"Logo\" width=\"150\" />\r\n    </div>\r\n\r\n    <!-- Navigation -->\r\n    <nav class=\"flex-1 p-4 overflow-y-auto custom-scroll\">\r\n      <ul class=\"space-y-1\">\r\n        <li\r\n          v-for=\"item in menuItems\"\r\n          :key=\"item.label\"\r\n          class=\"relative\"\r\n          @click.stop\r\n        >\r\n          <!-- Parent -->\r\n          <NuxtLink\r\n            :to=\"item.to || '#'\"\r\n            class=\"group flex items-center justify-between px-3 py-2 rounded-full transition-colors duration-200\"\r\n            :class=\"isActiveParent(item)\r\n              ? 'bg-[#0F4841] text-white'\r\n              : 'text-gray-600 hover:bg-[#0F4841] hover:text-white'\"\r\n            @click=\"handleClick(item, $event)\"\r\n          >\r\n            <div class=\"flex items-center space-x-3\">\r\n              <NuxtImg\r\n                :src=\"item.icon\"\r\n                :alt=\"item.label\"\r\n                width=\"20\"\r\n                class=\"transition-all duration-200\"\r\n                :class=\"isActiveParent(item)\r\n                  ? 'filter brightness-[4.5]'\r\n                  : 'group-hover:filter group-hover:brightness-[4.5]'\"\r\n              />\r\n              <span\r\n                class=\"text-sm transition-colors duration-200\"\r\n                :class=\"isActiveParent(item)\r\n                  ? 'text-white'\r\n                  : 'text-[#595959] group-hover:text-white'\"\r\n              >\r\n                {{ item.label }}\r\n              </span>\r\n            </div>\r\n\r\n            <!-- Arrow -->\r\n            <NuxtImg\r\n              v-if=\"item.children\"\r\n              src=\"/dropdown-icon.svg\"\r\n              alt=\"Dropdown\"\r\n              class=\"w-4 h-4 transition-transform\"\r\n              :class=\"[\r\n                (isDropdownOpen(item) ? 'rotate-180' : ''),\r\n                isActiveParent(item)\r\n                  ? 'filter brightness-[4.5]'\r\n                  : 'group-hover:filter group-hover:brightness-[4.5]'\r\n              ]\"\r\n            />\r\n          </NuxtLink>\r\n\r\n          <!-- Dropdown Items -->\r\n          <transition name=\"fade\">\r\n            <ul\r\n              v-if=\"item.children && isDropdownOpen(item)\"\r\n              class=\"pl-6 mt-2 space-y-1\"\r\n            >\r\n              <li\r\n                v-for=\"child in item.children\"\r\n                :key=\"child.to\"\r\n                class=\"flex items-center\"\r\n              >\r\n                <NuxtLink\r\n                  :to=\"child.to\"\r\n                  class=\"flex items-center space-x-2 text-sm transition-colors w-full py-2\"\r\n                  :class=\"isActive(child.to)\r\n                    ? 'font-semibold text-[#0F4841]'\r\n                    : 'text-[#595959] hover:text-[#0F4841]'\"\r\n                  @click=\"openDropdown = null\"\r\n                >\r\n                  <NuxtImg src=\"/before-icon.svg\" alt=\"icon\" width=\"14\" height=\"24\" />\r\n                  <span>{{ child.label }}</span>\r\n                </NuxtLink>\r\n              </li>\r\n            </ul>\r\n          </transition>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n    <!-- User Profile Section -->\r\n    <div class=\"p-4\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <div class=\"w-8 h-8 bg-red-500 rounded-full flex items-center justify-center\">\r\n            <span class=\"text-white text-sm font-medium\">M</span>\r\n          </div>\r\n          <span class=\"text-gray-700 font-medium\">Matt Villa</span>\r\n        </div>\r\n        <button class=\"w-5 h-5 text-gray-400 hover:text-gray-600 transition-colors\">\r\n          <NuxtImg src=\"user-red-icon.svg\" alt=\"User Menu\" width=\"20\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue'\r\nimport { useRoute } from '#app'\r\n\r\nconst route = useRoute()\r\nconst openDropdown = ref(null)\r\n\r\nconst menuItems = [\r\n  { to: '/dashboard', label: 'Dashboard', icon: '/dashboard-icon.svg' },\r\n  {\r\n    label: 'Admin',\r\n    icon: 'admin-icon.svg',\r\n    children: [\r\n      { to: '/admin-users', label: 'Admin Users' },\r\n      { to: '/terms-of-services', label: 'Terms Of Services' }\r\n    ]\r\n  },\r\n  { to: '/agencies', label: 'Agencies', icon: 'agencies-icon.svg' },\r\n  {\r\n    label: 'Properties',\r\n    icon: 'properties-icon.svg',\r\n    children: [\r\n      { to: '/new-connection-requests', label: 'New Connection Requests' },\r\n      { to: '/properties/rental', label: 'Rental Properties' },\r\n      { to: '/properties/sale', label: 'Sale Properties' }\r\n    ]\r\n  },\r\n  { to: '/customers', label: 'Customers', icon: 'customers-icon.svg' },\r\n  {\r\n    label: 'Notifications',\r\n    icon: 'notifications-icon.svg',\r\n    children: [\r\n      { to: '/send-push-notification', label: 'Send Push Notification' },\r\n      { to: '/notifications/email', label: 'Send Email Notification' },\r\n      { to: '/notifications/system', label: 'System Notifications' },\r\n      { to: '/notifications/history', label: 'Notification History' }\r\n    ]\r\n  },\r\n  { to: '/support', label: 'Support', icon: '/support-icon.svg' },\r\n  { to: '/reports', label: 'Reports', icon: '/reports-icon.svg' }\r\n]\r\n\r\n// ✅ Check if a parent is active based on current route\r\nconst isActiveParent = (item) => {\r\n  if (item.children) {\r\n    return item.children.some((child) => route.path.startsWith(child.to))\r\n  }\r\n  return item.to && route.path.startsWith(item.to)\r\n}\r\n\r\nconst isActive = (path) => route.path === path\r\n\r\n// ✅ Handle Dropdown Click Toggle\r\nconst handleClick = (item, event) => {\r\n  if (item.children) {\r\n    event.preventDefault()\r\n    openDropdown.value = openDropdown.value === item.label ? null : item.label\r\n  } else {\r\n    openDropdown.value = null // Close dropdown when navigating to a simple link\r\n  }\r\n}\r\n\r\n// ✅ Dropdown open condition (click only, no hover)\r\nconst isDropdownOpen = (item) => {\r\n  return openDropdown.value === item.label || isActiveParent(item)\r\n}\r\n\r\n// ✅ Close all dropdowns on route change\r\nwatch(\r\n  () => route.path,\r\n  () => {\r\n    openDropdown.value = null\r\n  }\r\n)\r\n\r\n// ✅ Close on outside click\r\nconst closeAllDropdowns = () => {\r\n  openDropdown.value = null\r\n}\r\nonMounted(() => {\r\n  document.addEventListener('click', closeAllDropdowns)\r\n})\r\nonBeforeUnmount(() => {\r\n  document.removeEventListener('click', closeAllDropdowns)\r\n})\r\n</script>\r\n\r\n<style>\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.2s ease;\r\n}\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"version":3}